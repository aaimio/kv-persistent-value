"use strict";exports.accessTokenValidator = validate10;const schema11 = {"required":["x-github-repo"],"type":"object","properties":{"x-github-repo":{"type":"string","minLength":3,"maxLength":1024}}};const func4 = require("ajv/dist/runtime/ucs2length").default;function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data["x-github-repo"] === undefined) && (missing0 = "x-github-repo")){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data["x-github-repo"] !== undefined){let data0 = data["x-github-repo"];const _errs1 = errors;if(errors === _errs1){if(typeof data0 === "string"){if(func4(data0) > 1024){validate10.errors = [{instancePath:instancePath+"/x-github-repo",schemaPath:"#/properties/x-github-repo/maxLength",keyword:"maxLength",params:{limit: 1024},message:"must NOT have more than 1024 characters"}];return false;}else {if(func4(data0) < 3){validate10.errors = [{instancePath:instancePath+"/x-github-repo",schemaPath:"#/properties/x-github-repo/minLength",keyword:"minLength",params:{limit: 3},message:"must NOT have fewer than 3 characters"}];return false;}}}else {validate10.errors = [{instancePath:instancePath+"/x-github-repo",schemaPath:"#/properties/x-github-repo/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;}exports.getValueValidator = validate11;const schema12 = {"type":"object","required":["x-access-token","key"],"properties":{"x-access-token":{"type":"string","minLength":36,"maxLength":36},"key":{"type":"string","minLength":1,"maxLength":1024}}};function validate11(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data["x-access-token"] === undefined) && (missing0 = "x-access-token")) || ((data.key === undefined) && (missing0 = "key"))){validate11.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data["x-access-token"] !== undefined){let data0 = data["x-access-token"];const _errs1 = errors;if(errors === _errs1){if(typeof data0 === "string"){if(func4(data0) > 36){validate11.errors = [{instancePath:instancePath+"/x-access-token",schemaPath:"#/properties/x-access-token/maxLength",keyword:"maxLength",params:{limit: 36},message:"must NOT have more than 36 characters"}];return false;}else {if(func4(data0) < 36){validate11.errors = [{instancePath:instancePath+"/x-access-token",schemaPath:"#/properties/x-access-token/minLength",keyword:"minLength",params:{limit: 36},message:"must NOT have fewer than 36 characters"}];return false;}}}else {validate11.errors = [{instancePath:instancePath+"/x-access-token",schemaPath:"#/properties/x-access-token/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.key !== undefined){let data1 = data.key;const _errs3 = errors;if(errors === _errs3){if(typeof data1 === "string"){if(func4(data1) > 1024){validate11.errors = [{instancePath:instancePath+"/key",schemaPath:"#/properties/key/maxLength",keyword:"maxLength",params:{limit: 1024},message:"must NOT have more than 1024 characters"}];return false;}else {if(func4(data1) < 1){validate11.errors = [{instancePath:instancePath+"/key",schemaPath:"#/properties/key/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}}}else {validate11.errors = [{instancePath:instancePath+"/key",schemaPath:"#/properties/key/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs3 === errors;}else {var valid0 = true;}}}}else {validate11.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate11.errors = vErrors;return errors === 0;}exports.setValueValidator = validate12;const schema13 = {"type":"object","required":["x-access-token","key","value"],"properties":{"x-access-token":{"type":"string","minLength":36,"maxLength":36},"key":{"type":"string","minLength":1,"maxLength":1024},"value":{"oneOf":[{"type":"string","minLength":1,"maxLength":1024},{"type":"number"},{"type":"boolean"}]}}};function validate12(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((data["x-access-token"] === undefined) && (missing0 = "x-access-token")) || ((data.key === undefined) && (missing0 = "key"))) || ((data.value === undefined) && (missing0 = "value"))){validate12.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data["x-access-token"] !== undefined){let data0 = data["x-access-token"];const _errs1 = errors;if(errors === _errs1){if(typeof data0 === "string"){if(func4(data0) > 36){validate12.errors = [{instancePath:instancePath+"/x-access-token",schemaPath:"#/properties/x-access-token/maxLength",keyword:"maxLength",params:{limit: 36},message:"must NOT have more than 36 characters"}];return false;}else {if(func4(data0) < 36){validate12.errors = [{instancePath:instancePath+"/x-access-token",schemaPath:"#/properties/x-access-token/minLength",keyword:"minLength",params:{limit: 36},message:"must NOT have fewer than 36 characters"}];return false;}}}else {validate12.errors = [{instancePath:instancePath+"/x-access-token",schemaPath:"#/properties/x-access-token/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.key !== undefined){let data1 = data.key;const _errs3 = errors;if(errors === _errs3){if(typeof data1 === "string"){if(func4(data1) > 1024){validate12.errors = [{instancePath:instancePath+"/key",schemaPath:"#/properties/key/maxLength",keyword:"maxLength",params:{limit: 1024},message:"must NOT have more than 1024 characters"}];return false;}else {if(func4(data1) < 1){validate12.errors = [{instancePath:instancePath+"/key",schemaPath:"#/properties/key/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}}}else {validate12.errors = [{instancePath:instancePath+"/key",schemaPath:"#/properties/key/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.value !== undefined){let data2 = data.value;const _errs5 = errors;const _errs6 = errors;let valid1 = false;let passing0 = null;const _errs7 = errors;if(errors === _errs7){if(typeof data2 === "string"){if(func4(data2) > 1024){const err0 = {instancePath:instancePath+"/value",schemaPath:"#/properties/value/oneOf/0/maxLength",keyword:"maxLength",params:{limit: 1024},message:"must NOT have more than 1024 characters"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}else {if(func4(data2) < 1){const err1 = {instancePath:instancePath+"/value",schemaPath:"#/properties/value/oneOf/0/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}}}else {const err2 = {instancePath:instancePath+"/value",schemaPath:"#/properties/value/oneOf/0/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;}}var _valid0 = _errs7 === errors;if(_valid0){valid1 = true;passing0 = 0;}const _errs9 = errors;if(!((typeof data2 == "number") && (isFinite(data2)))){const err3 = {instancePath:instancePath+"/value",schemaPath:"#/properties/value/oneOf/1/type",keyword:"type",params:{type: "number"},message:"must be number"};if(vErrors === null){vErrors = [err3];}else {vErrors.push(err3);}errors++;}var _valid0 = _errs9 === errors;if(_valid0 && valid1){valid1 = false;passing0 = [passing0, 1];}else {if(_valid0){valid1 = true;passing0 = 1;}const _errs11 = errors;if(typeof data2 !== "boolean"){const err4 = {instancePath:instancePath+"/value",schemaPath:"#/properties/value/oneOf/2/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};if(vErrors === null){vErrors = [err4];}else {vErrors.push(err4);}errors++;}var _valid0 = _errs11 === errors;if(_valid0 && valid1){valid1 = false;passing0 = [passing0, 2];}else {if(_valid0){valid1 = true;passing0 = 2;}}}if(!valid1){const err5 = {instancePath:instancePath+"/value",schemaPath:"#/properties/value/oneOf",keyword:"oneOf",params:{passingSchemas: passing0},message:"must match exactly one schema in oneOf"};if(vErrors === null){vErrors = [err5];}else {vErrors.push(err5);}errors++;validate12.errors = vErrors;return false;}else {errors = _errs6;if(vErrors !== null){if(_errs6){vErrors.length = _errs6;}else {vErrors = null;}}}var valid0 = _errs5 === errors;}else {var valid0 = true;}}}}}else {validate12.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate12.errors = vErrors;return errors === 0;}exports.setMultipleValuesValidator = validate13;const schema14 = {"type":"object","required":["x-access-token","values"],"properties":{"x-access-token":{"type":"string","minLength":36,"maxLength":36},"values":{"type":"object"}}};function validate13(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data["x-access-token"] === undefined) && (missing0 = "x-access-token")) || ((data.values === undefined) && (missing0 = "values"))){validate13.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data["x-access-token"] !== undefined){let data0 = data["x-access-token"];const _errs1 = errors;if(errors === _errs1){if(typeof data0 === "string"){if(func4(data0) > 36){validate13.errors = [{instancePath:instancePath+"/x-access-token",schemaPath:"#/properties/x-access-token/maxLength",keyword:"maxLength",params:{limit: 36},message:"must NOT have more than 36 characters"}];return false;}else {if(func4(data0) < 36){validate13.errors = [{instancePath:instancePath+"/x-access-token",schemaPath:"#/properties/x-access-token/minLength",keyword:"minLength",params:{limit: 36},message:"must NOT have fewer than 36 characters"}];return false;}}}else {validate13.errors = [{instancePath:instancePath+"/x-access-token",schemaPath:"#/properties/x-access-token/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.values !== undefined){let data1 = data.values;const _errs3 = errors;if(!(data1 && typeof data1 == "object" && !Array.isArray(data1))){validate13.errors = [{instancePath:instancePath+"/values",schemaPath:"#/properties/values/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}var valid0 = _errs3 === errors;}else {var valid0 = true;}}}}else {validate13.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate13.errors = vErrors;return errors === 0;}